# 參考Lucy（@Repcz）
# Author:https://github.com/ColinYYCC
# 以 '#' 或 '//' 开头的配置文件行为注释行
#
# Mihomo Version ≥ 1.8.5
#
# ================

# 混合端口 HTTP和SOCKS5用一个端口
mixed-port: 7893
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true
# 允许局域网的连接（可用来共享代理）
allow-lan: true
# 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录  
ipv6: false
# 规则模式：rule/global/direct/script
mode: rule
# 设置日志输出级别: silent/error/warning/info/debug
log-level: info
# 全局 TLS 指纹
global-client-fingerprint: chrome
# 匹配所有进程（always/strict/off）
find-process-mode: strict

# 使用geoip.dat数据库
geodata-mode: true
geox-url:
  geoip: "https://github.com/xream/geoip/releases/latest/download/ipinfo.geoip.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/xream/geoip/releases/latest/download/ipinfo.country.mmdb"
                         
profile:
  # 存储 select 选择记录
  store-selected: true 
  # 持久化 fake-ip
  store-fake-ip: true  

# 嗅探域名 可选配置
sniffer:               
  enable: true
  # 是否使用嗅探结果作为实际访问，默认 true
  parse-pure-ip: true  
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    QUIC:
      ports: [443, 8443]

# Tun 配置  
tun:
  enable: true
  # 可选： system/gvisor/mixed；
  stack: mixed
  # dns劫持,一般设置为 any:53 即可, 即劫持所有53端口的udp流量
  dns-hijack: [8.8.8.8:53, 8.8.4.4:53]
  # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
  auto-route: true
  # 自动识别出口网卡
  auto-detect-interface: true
        
dns:
  enable: true
  # IPV6解析开关；如果为false，将返回ipv6结果为空
  ipv6: false
  # 模式：redir-host或fake-ip
  enhanced-mode: fake-ip
  # DNS监听地址
  listen: 0.0.0.0:1053
  # Fake-IP解析地址池
  fake-ip-range: 198.18.0.1/16
  # fakeip 过滤，以下地址不会下发 fakeip 映射用于连接
  fake-ip-filter: ['*.lan','*.direct', cable.auth.com, '*.msftconnecttest.com', '*.msftncsi.com', network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, '*.srv.nintendo.net', '*.stun.playstation.net', xbox.*.microsoft.com, '*.xboxlive.com', stun.*, global.turn.twilio.com, global.stun.twilio.com, app.yinxiang.com, injections.adguard.org, local.adguard.org, cable.auth.com, localhost.*.qq.com, localhost.*.weixin.qq.com, '*.logon.battlenet.com.cn', '*.logon.battle.net', '*.blzstatic.cn', music.163.com, '*.music.163.com', '*.126.net', musicapi.taihe.com, music.taihe.com, songsearch.kugou.com, trackercdn.kugou.com, '*.kuwo.cn', api-jooxtt.sanook.com, api.joox.com, joox.com, y.qq.com, '*.y.qq.com', streamoc.music.tc.qq.com, mobileoc.music.tc.qq.com, isure.stream.qqmusic.qq.com, dl.stream.qqmusic.qq.com, aqqmusic.tc.qq.com, amobile.music.tc.qq.com, '*.xiami.com', '*.music.migu.cn', music.migu.cn, proxy.golang.org, '*.mcdn.bilivideo.cn', '*.cmpassport.com', id6.me, open.e.189.cn, mdn.open.wo.cn, opencloud.wostore.cn, auth.wosms.cn, '*.jegotrip.com.cn', '*.icitymobile.mobi', '*.pingan.com.cn', '*.cmbchina.com', '*.10099.com.cn', pool.ntp.org, '*.pool.ntp.org', ntp.*.com, time.*.com, 'ntp?.*.com', 'time?.*.com', time.*.gov, time.*.edu.cn, '*.ntp.org.cn', PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*]
  #默认的域名解析服务器
  default-nameserver: [9.9.9.9, 149.112.112.112]                     
    
# 策略组引用相关参数
pg: &pg {type: select, proxies: [手动切换, 香港节点, 美国节点, 狮城节点, 日本节点, 台湾节点, 韩国节点, 故障转移, 负载均衡, DIRECT]}
# 订阅更新和延迟测试相关参数
p: &p {type: http, interval: 86400, health-check: {enable: true, url: http://latency-test.skk.moe/endpoint, interval: 1800}}
# 自动选择策略组：选取延迟最低节点
url-test: &url-test {type: url-test, lazy: true, url: http://latency-test.skk.moe/endpoint, interval: 300, tolerance: 0, include-all: true}
# 手动选择策略组：手动选择想要的节点/策略组
select: &select {type: select, include-all: true}
# 故障回退策略组：策略组将按顺序选择你列表中第一个可用的节点
fallback: &fallback {type: fallback, lazy: true, url: http://latency-test.skk.moe/endpoint, interval: 300, include-all: true}
# 负载均衡策略组：不同的请求将使用不同的代理节点
load-balance: &load-balance {type: load-balance, lazy: true, strategy: consistent-hashing, url: http://latency-test.skk.moe/endpoint, interval: 300, include-all: true}
# classical规则相关
c: &c {type: http, behavior: classical, format: text, interval: 86400}
# domain规则相关
d: &d {type: http, behavior: domain, format: text, interval: 86400}
# ipcidr规则相关
i: &i {type: http, behavior: ipcidr, format: text, interval: 86400}

proxy-providers:
  Subscribe: {<<: *p, path: ./RuleSet/Sub.yaml, url: http://your-service-provider}
    # 在此将"http://your-service-provider"替换为你的机场订阅，推荐使用 base64 或者 node list
    # Sub-Store生成的链接,可以直接替换上述 url 引号中的部分,具体见 Sub-Store 教程  

# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterGame: &FilterGame '^(?=.*((?i)游戏|🎮|(\b(GAME)\b)))(?!.*((?i)回国|校园)).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'
               
proxy-groups:

  #分流分组

  - {name: 手动切换, type: select, include-all: true, proxies: [自动选择, 香港节点, 美国节点, 狮城节点, 日本节点, 台湾节点, 韩国节点, 故障转移, 负载均衡, DIRECT], icon: https://github.com/clash-verge-rev/clash-verge-rev/raw/main/src-tauri/icons/icon.png}

  - {name: 国外网站, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png}

  - {name: 国际媒体, <<: *pg, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Netflix.png}

  - {name: 苹果服务, <<: *pg, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Apple.png}

  - {name: 微软服务, <<: *pg, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Microsoft.png}

  - {name: 谷歌服务, <<: *pg, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Google_Suite/Google.png}

  - {name: 电报消息, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png}

  - {name: 推特消息, <<: *pg, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Twitter.png}

  - {name: AI, <<: *pg, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png}

  - {name: 游戏平台, type : select, include-all: true, filter: *FilterGame, proxies: [DIRECT, 手动切换], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Steam.png}

  - {name: Emby, <<: *pg, include-all: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Emby.png}

  - {name: 广告拦截, type: select, proxies: [REJECT-DROP, DIRECT], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Reject.orig.png}

  - {name: 兜底分流, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color//Final_1.png}

  #节点地区分组

  - {name: 自动选择, <<: *url-test, filter: *FilterAll, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Auto_Speed.png}

  - {name: 故障转移, <<: *fallback, filter: *FilterAll, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Server.png}

  - {name: 负载均衡, <<: *load-balance, filter: *FilterAll, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}

  - {name: 香港节点, <<: *fallback, filter: *FilterHK, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Hong_Kong.png}

  - {name: 美国节点, <<: *fallback, filter: *FilterUS, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/United_States.png}

  - {name: 狮城节点, <<: *fallback, filter: *FilterSG, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Singapore.png}

  - {name: 日本节点, <<: *fallback, filter: *FilterJP, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Japan.png}

  - {name: 台湾节点, <<: *fallback, filter: *FilterTW, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Taiwan.png}

  - {name: 韩国节点, <<: *fallback, filter: *FilterKR, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/South_Korea.png}

rule-providers:

  # 局域网   
  Lan: {<<: *c, path: ./RuleSet/Lan.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Lan.list}

  # 下载服务
  Download: {<<: *c, path: ./RuleSet/Download.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Download.list}
      
  # 广告拦截
  Reject_non_ip_no_drop: {<<: *c, path: ./RuleSet/reject_non_ip_no_drop.txt, url: https://ruleset.skk.moe/Clash/non_ip/reject-no-drop.txt}
  Reject_non_ip_drop: {<<: *c, path: ./RuleSet/reject_non_ip_drop.txt, url: https://ruleset.skk.moe/Clash/non_ip/reject-drop.txt}
  Reject_non_ip: {<<: *c, path: ./RuleSet/reject_non_ip.txt, url: https://ruleset.skk.moe/Clash/non_ip/reject.txt}
  # reject_domainset: {<<: *d, path: ./RuleSet/reject_domainset.txt, url: https://ruleset.skk.moe/Clash/domainset/reject.txt}
  Reject_ip: {<<: *c, path: ./RuleSet/reject_ip.txt, url: https://ruleset.skk.moe/Clash/ip/reject.txt}
  adrules: {<<: *c, path: ./RuleSet/adrules.list, url: https://adrules.top/adrules.list}

  # 搜狗输入法 隐私收集
  Sogouinput: {<<: *c, path: ./RuleSet/sogouinput.txt, url: https://ruleset.skk.moe/Clash/non_ip/sogouinput.txt}

  # 常见静态 CDN
  Cdn_domainset: {<<: *d, path: ./RuleSet/cdn_domainset.txt, url: https://ruleset.skk.moe/Clash/domainset/cdn.txt}
  Cdn_non_ip: {<<: *d, path: ./RuleSet/cdn_non_ip.txt, url: https://ruleset.skk.moe/Clash/non_ip/cdn.txt}

  # 苹果服务
  Apple Service: {<<: *c, path: ./RuleSet/apple_services.conf,  url: https://ruleset.skk.moe/List/non_ip/apple_services.conf}
  Apple CDN: {<<: *c, path: ./RuleSet/apple_cdn.conf,  url: https://ruleset.skk.moe/List/non_ip/apple_cdn.conf}

  # 微软服务 
  OneDrive: {<<: *c, path: ./RuleSet/OneDrive.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/OneDrive.list}
  Github: {<<: *c, path: ./RuleSet/Github.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Github.list}
  Microsoft: {<<: *c, path: ./RuleSet/Microsoft.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Microsoft.list}

  # 谷歌服务
  YouTube: {<<: *c, path: ./RuleSet/YouTube.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/YouTube.list}
  Google: {<<: *c, path: ./RuleSet/Google.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Google.list}

  # 电报消息
  Telegram_non_ip: {<<: *c, path: ./RuleSet/telegram_non_ip.txt, url: https://ruleset.skk.moe/Clash/non_ip/telegram.txt}
  Telegram_ip: {<<: *c, path: ./RuleSet/telegram_ip.txt, url: https://ruleset.skk.moe/Clash/ip/telegram.txt}

  # 推特消息
  Twitter: {<<: *c, path: ./RuleSet/Twitter.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Twitter.list}

  # 游戏平台
  Steam: {<<: *c, path: ./RuleSet/steam.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Steam.list}
  Epic: {<<: *c, path: ./RuleSet/Epic.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Epic.list}

  # AI平台
  AI: {<<: *c, path: ./RuleSet/AI.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/AI.list}

  # Emby
  Emby: {<<: *c, path: ./RuleSet/Emby.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Emby.list}

  # 国际媒体
  ProxyMedia: {<<: *c, path: ./RuleSet/ProxyMedia.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/ProxyMedia.list}

  # 国外网站
  国外网站: {<<: *c, path: ./RuleSet/global_non_ip.tx, url: https://ruleset.skk.moe/Clash/non_ip/global.txt}
   
  # 中国大陆
  ChinaDomain: {<<: *c, path: ./RuleSet/ChinaDomain.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/ChinaDomain.list}
  Domestic_non_ip: {<<: *c, path: ./RuleSet/domestic_non_ip.txt, url: https://ruleset.skk.moe/Clash/non_ip/domestic.txt}
  Direct_non_ip: {<<: *c, path: ./RuleSet/direct_non_ip.txt, url: https://ruleset.skk.moe/Clash/non_ip/direct.txt}
  Domestic_ip: {<<: *c, path: ./RuleSet/domestic_ip.txt, url: https://ruleset.skk.moe/Clash/ip/domestic.txt}
  China_ip: {<<: *i, path: ./RuleSet/china_ip.txt, url: https://ruleset.skk.moe/Clash/ip/china_ip.txt}
    
rules:
  - RULE-SET,Lan,DIRECT
  #- SCRIPT,quic,REJECT
  #- RULE-SET,Download,DIRECT
  - RULE-SET,Reject_non_ip_no_drop,广告拦截
  - RULE-SET,Reject_non_ip_drop,广告拦截
  - RULE-SET,Reject_non_ip,广告拦截
  # - RULE-SET,Reject_domainset,广告拦截
  - RULE-SET,Reject_ip,广告拦截
  - RULE-SET,adrules,广告拦截
  - RULE-SET,Sogouinput,广告拦截
  - RULE-SET,Cdn_domainset,兜底分流
  - RULE-SET,Cdn_non_ip,兜底分流
  - RULE-SET,AI,AI
  - RULE-SET,Apple Service,苹果服务
  - RULE-SET,Apple CDN,DIRECT
  - RULE-SET,OneDrive,微软服务
  - RULE-SET,Github,微软服务
  - RULE-SET,Microsoft,微软服务
  - RULE-SET,YouTube,谷歌服务
  - RULE-SET,Google,谷歌服务
  - RULE-SET,Telegram_non_ip,电报消息
  - RULE-SET,Telegram_ip,电报消息
  - RULE-SET,Twitter,推特消息
  - RULE-SET,Steam,游戏平台
  - RULE-SET,Epic,游戏平台
  - RULE-SET,Emby,Emby
  - RULE-SET,ProxyMedia,国际媒体
  - RULE-SET,国外网站,国外网站
  - RULE-SET,ChinaDomain,DIRECT
  - RULE-SET,Domestic_non_ip,DIRECT
  - RULE-SET,Direct_non_ip,DIRECT
  - RULE-SET,China_ip,DIRECT,no-resolve
  - GEOIP,CN,DIRECT,no-resolve
  - MATCH,兜底分流
