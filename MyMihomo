# mihomo 配置
# 日期：2025-02-11 15:31:03
# 配置作者：Colin(@ColinYYCC) & YY(@yyhhyyyyyy)
# 适用版本：所有使用 mihomo 核心的程序

### 全局配置
port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894
experimental:
  ignore-resolve-fail: true

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: true
mode: rule
log-level: warning
ipv6: false
udp: true

### 如果使用的是裸核，需要将下面的注释去掉，方便ui界面的使用
# external-controller: 0.0.0.0:9988
# external-ui: ui
# external-ui-url: 'https://mirror.ghproxy.com/https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip'

geox-url:
  geoip: "https://github.com/xream/geoip/releases/latest/download/ipinfo.geoip.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/xream/geoip/releases/latest/download/ipinfo.country.mmdb"
  asn: 'https://github.com/xream/geoip/releases/latest/download/ipinfo.asn.mmdb'

### DNS配置
dns:
  enable: true
  listen: 0.0.0.0:1053
  prefer-h3: true
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  # fake-ip-filter start
  fake-ip-filter:
    - "*.lan" 
    - "*.direct" 
    - "cable.auth.com" 
    - "*.msftconnecttest.com" 
    - "*.msftncsi.com" 
    - "network    -test.debian.org" 
    - "detectportal.firefox.com" 
    - "resolver1.opendns.com" 
    - "*.srv.nintendo.net" 
    - "*.stun.playstation.net" 
    - "xbox.*.microsoft.com" 
    - "*.xboxlive.com" 
    - "stun.*" 
    - "global.turn.twilio.com" 
    - "global.stun.twilio.com" 
    - "app.yinxiang.com" 
    - "injections.adguard.org" 
    - "local.adguard.org" 
    - "cable.auth.com" 
    - "localhost.*.qq.com" 
    - "localhost.*.weixin.qq.com" 
    - "*.logon.battlenet.com.cn" 
    - "*.logon.battle.net" 
    - "*.blzstatic.cn" 
    - "music.163.com" 
    - "*.music.163.com" 
    - "*.126.net" 
    - "musicapi.taihe.com" 
    - "music.taihe.com" 
    - "songsearch.kugou.com" 
    - "trackercdn.kugou.com" 
    - "*.kuwo.cn" 
    - "api-jooxtt.sanook.com" 
    - "api.joox.com" 
    - "joox.com" 
    - "y.qq.com" 
    - "*.y.qq.com" 
    - "streamoc.music.tc.qq.com" 
    - "mobileoc.music.tc.qq.com" 
    - "isure.stream.qqmusic.qq.com" 
    - "dl.stream.qqmusic.qq.com" 
    - "aqqmusic.tc.qq.com" 
    - "amobile.music.tc.qq.com" 
    - "*.xiami.com" 
    - "*.music.migu.cn" 
    - "music.migu.cn" 
    - "proxy.golang.org" 
    - "*.mcdn.bilivideo.cn" 
    - "*.cmpassport.com" 
    - "id6.me" 
    - "open.e.189.cn" 
    - "mdn.open.wo.cn" 
    - "opencloud.wostore.cn" 
    - "auth.wosms.cn" 
    - "*.jegotrip.com.cn" 
    - "*.icitymobile.mobi" 
    - "*.pingan.com.cn" 
    - "*.cmbchina.com" 
    - "*.10099.com.cn" 
    - "pool.ntp.org" 
    - "*.pool.ntp.org" 
    - "ntp.*.com" 
    - "time.*.com" 
    - "ntp?.*.com" 
    - "time?.*.com" 
    - "time.*.gov" 
    - "time.*.edu.cn" 
    - "*.ntp.org.cn" 
    - "PDC._msDCS.*.*" 
    - "DC._msDCS.*.*" 
    - "GC._msDCS.*.*
  # fake-ip-filter end
  respect-rules: true
  nameserver:
    - https://dns11.quad9.net/dns-query
    - https://doh.pub/dns-query
  proxy-server-nameserver:
    - https://dns11.quad9.net/dns-query
    - https://doh.pub/dns-query

profile:
  store-selected: true
  store-fake-ip: true

### 域名嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "Mijia Cloud"
    - "+.push.apple.com"

### Tunnel配置
tun:
  enable: true
  stack: system
  device: Ethernet 99
  auto-route: true
  auto-detect-interface: true
  dns-hijack:
    - any:53
    - tcp://any:53
  strict-route: true
  mtu: 1500
  # 如果有使用zerotier或者headscale等，需要自己配置排除自己的网段
  # route-exclude-address: ["192.168.110.0/24"]

### 节点配置
NodeParam: &NodeParam {type: http, interval: 86400, health-check: {enable: true, url: 'http://latency-test.skk.moe/endpoint', interval: 300}}
# 节点订阅
proxy-providers: 
  Node-1:
    url: '替换订阅链接'
    <<: *NodeParam
    path: './proxy_provider/providers.yaml'
  # Node-2:
  #   url: '替换订阅链接'
  #   <<: *NodeParam
  #   path: './proxy_provider/providers.yaml'

# 节点筛选
FilterHK: &FilterHK '^(?=.*(香港|HK|Hong|🇭🇰))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点)).*$'
FilterJP: &FilterJP '^(?=.*(日本|JP|Japan|🇯🇵))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点)).*$'
FilterKR: &FilterKR '^(?=.*(韩国|韓|KR|Korea|🇰🇷))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点)).*$'
FilterSG: &FilterSG '^(?=.*(新加坡|狮城|SG|Singapore|🇸🇬))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点)).*$'
FilterUS: &FilterUS '^(?=.*(美国|US|United States|America|🇺🇸))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点)).*$'
FilterUK: &FilterUK '^(?=.*(英国|UK|United Kingdom|🇬🇧))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点)).*$'
FilterFR: &FilterFR '^(?=.*(法国|FR|France|🇫🇷))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点)).*$'
FilterDE: &FilterDE '^(?=.*(德国|DE|Germany|🇩🇪))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点)).*$'
FilterTW: &FilterTW '^(?=.*(台湾|TW|Taiwan|Wan|🇹🇼|🇨🇳))^(?!.*(网站|地址|剩余|过期|时间|有效|网址|禁止|邮箱|发布|客服|订阅|节点)).*$'
FilterOthers: &FilterOthers '^(?!.*(🇭🇰|HK|Hong|香港|🇹🇼|TW|Taiwan|Wan|🇯🇵|JP|Japan|日本|🇸🇬|SG|Singapore|狮城|🇺🇸|US|United States|America|美国|🇩🇪|DE|Germany|德国|🇬🇧|UK|United Kingdom|英国|🇰🇷|KR|Korea|韩国|韓|🇫🇷|FR|France|法国)).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'

# 节点组参数锚点
# 锚点 - 时延优选参数 [每 300 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 300, tolerance: 20, url: 'http://latency-test.skk.moe/endpoint', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all: true}
# 锚点 - 故障转移参数 [每 300 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 300, url: 'http://latency-test.skk.moe/endpoint', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: false, include-all: true}
# 锚点 - 负载均衡参数 [每 300 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, interval: 300, url: 'http://latency-test.skk.moe/endpoint', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: false, include-all: true}
# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用直连节点]

# 节点组
proxy-groups: 
  - {name: 手动切换, type: select, proxies: [🛰️ 自动选择, 🔮 负载均衡, 🔯 故障转移, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点], icon: https://github.com/chen08209/FlClash/raw/main/assets/images/icon.png}
  - {name: Telegram, type: select, proxies: [🔮 负载均衡, 🔯 故障转移, 🛰️ 自动选择, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点], icon: https://github.com/tugepaopao/Image-Storage/raw/master/hand-painted/36.png}
  - {name: App Store, type: select, proxies: [DIRECT, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Apple.png}
  - {name: Netflix, type: select, proxies: [香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Netflix.png}
  - {name: 🤖 AIGC, type: select, proxies: [美国节点, 手动切换, 香港节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 英国节点, 法国节点, 德国节点, 台湾节点], icon: https://github.com/ColinYYCC/Network-Tools/raw/main/Logo/DeepSeek.png}
  - {name: Ⓜ️ 微软服务, type: select, proxies: [DIRECT, 手动切换, 香港节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 英国节点, 法国节点, 德国节点, 台湾节点], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Microsoft.png}
  - {name: 漏网之鱼, type: select, proxies: [🔯 故障转移, 🛰️ 自动选择, 🔮 负载均衡, DIRECT], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Snapfish.png}

  # 自动选择
  - {name: 香港节点, <<: *UrlTest, filter: *FilterHK, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Hong_Kong.png}
  - {name: 日本节点, <<: *UrlTest, filter: *FilterJP, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Japan.png}
  - {name: 韩国节点, <<: *UrlTest, filter: *FilterKR, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/South_Korea.png}
  - {name: 狮城节点, <<: *UrlTest, filter: *FilterSG, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Singapore.png}
  - {name: 美国节点, <<: *UrlTest, filter: *FilterUS, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/United_States.png}
  - {name: 英国节点, <<: *UrlTest, filter: *FilterUK, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/United_Kingdom.png}
  - {name: 法国节点, <<: *UrlTest, filter: *FilterFR, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/France.png}
  - {name: 德国节点, <<: *UrlTest, filter: *FilterDE, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Germany.png}
  - {name: 台湾节点, <<: *UrlTest, filter: *FilterTW, icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Taiwan.png}


  # 全部节点
  - {name: 🛰️ 自动选择, <<: *UrlTest, filter: *FilterAll, icon: https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/quanqiu(3).png}
  - {name: 🔯 故障转移, <<: *FallBack, filter: *FilterAll, icon: https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/select.png}
  - {name: 🔮 负载均衡, <<: *LoadBalance, filter: *FilterAll, icon: https://github.com/shindgewongxj/WHATSINStash/raw/main/icon/loadbalance.png}


### 规则配置
RuleSet_classicalT: &RuleSet_classicalT {type: http, behavior: classical, interval: 43200, format: text, proxy: 手动切换}
RuleSet_classicalY: &RuleSet_classicalY {type: http, behavior: classical, interval: 43200, format: yaml, proxy: 手动切换}
RuleSet_domain: &RuleSet_domain {type: http, behavior: domain, interval: 43200, format: text, proxy: 手动切换}
RuleSet_ipcidr: &RuleSet_ipcidr {type: http, behavior: ipcidr, interval: 43200, format: text, proxy: 手动切换}

# 订阅规则
rule-providers:
  Special:
    <<: *RuleSet_classicalY
    url: https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Special.yaml
    path: ./Rules/Special.yaml

  RejectPCDN:
    <<: *RuleSet_classicalT
    url: 'https://ruleset.skk.moe/Clash/non_ip/reject-no-drop.txt'
    path: './Rules/sukkaw_ruleset/reject_non_ip_no_drop.txt'

  reject_non_ip_drop:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/reject-drop.txt
    path: ./Rules/sukkaw_ruleset/reject_non_ip_drop.txt

  reject_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/reject.txt
    path: ./Rules/sukkaw_ruleset/reject_non_ip.txt

  reject_domainset:
    <<: *RuleSet_domain
    url: https://ruleset.skk.moe/Clash/domainset/reject.txt
    path: ./Rules/sukkaw_ruleset/reject_domainset.txt

  reject_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/ip/reject.txt
    path: ./Rules/sukkaw_ruleset/reject_ip.txt

  # 常见静态 CDN
  cdn_domainset:
    <<: *RuleSet_domain
    url: https://ruleset.skk.moe/Clash/domainset/cdn.txt
    path: ./Rules/sukkaw_ruleset/cdn_domainset.txt

  cdn_non_ip:
    <<: *RuleSet_domain
    url: https://ruleset.skk.moe/Clash/non_ip/cdn.txt
    path: ./Rules/sukkaw_ruleset/cdn_non_ip.txt

  # 所有流媒体（包括上述所有流媒体）
  Netflix:
    <<: *RuleSet_classicalY
    url: 'https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Media/Netflix.yaml'
    path: './rules/Netflix.yaml'

  stream_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/stream.txt
    path: ./Rules/sukkaw_ruleset/stream_non_ip.txt
  stream_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/ip/stream.txt
    path: ./Rules/sukkaw_ruleset/stream_ip.txt

  ai_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/ai.txt
    path: ./Rules/sukkaw_ruleset/ai_non_ip.txt

  Telegram:
    <<: *RuleSet_classicalT
    url: https://github.com/LucaLin233/Luca_Conf/raw/main/Surge/Rule/Telegram.list
    path: ./Rules/Telegram.txt

  apple_cdn:
    <<: *RuleSet_domain
    url: https://ruleset.skk.moe/Clash/domainset/apple_cdn.txt
    path: ./Rules/sukkaw_ruleset/apple_cdn.txt

  apple_services:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/apple_services.txt
    path: ./Rules/sukkaw_ruleset/apple_services.txt

  apple_cn_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/apple_cn.txt
    path: ./Rules/sukkaw_ruleset/apple_cn_non_ip.txt
  
  microsoft_cdn_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/microsoft_cdn.txt
    path: ./Rules/sukkaw_ruleset/microsoft_cdn_non_ip.txt

  microsoft_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/microsoft.txt
    path: ./Rules/sukkaw_ruleset/microsoft_non_ip.txt
  
  # 软件更新、操作系统等大文件下载
  download_domainset:
    <<: *RuleSet_domain
    url: https://ruleset.skk.moe/Clash/domainset/download.txt
    path: ./Rules/sukkaw_ruleset/download_domainset.txt
  download_non_ip:
    <<: *RuleSet_domain
    url: https://ruleset.skk.moe/Clash/non_ip/download.txt
    path: ./Rules/sukkaw_ruleset/download_non_ip.txt

  # 内网域名和局域网 IP
  lan_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/lan.txt
    path: ./Rules/sukkaw_ruleset/lan_non_ip.txt
  lan_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/ip/lan.txt
    path: ./Rules/sukkaw_ruleset/lan_ip.txt
  
  domestic_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/domestic.txt
    path: ./Rules/sukkaw_ruleset/domestic_non_ip.txt
  direct_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/direct.txt
    path: ./Rules/sukkaw_ruleset/direct_non_ip.txt
  global_non_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/non_ip/global.txt
    path: ./Rules/sukkaw_ruleset/global_non_ip.txt
  domestic_ip:
    <<: *RuleSet_classicalT
    url: https://ruleset.skk.moe/Clash/ip/domestic.txt
    path: ./Rules/sukkaw_ruleset/domestic_ip.txt

  china_ip:
    <<: *RuleSet_ipcidr
    url: https://ruleset.skk.moe/Clash/ip/china_ip.txt
    path: ./Rules/sukkaw_ruleset/china_ip.txt

# 分流规则
rules:
  ### 非 IP 类规则
  # 直连和广告拦截
  - RULE-SET,Special,DIRECT
  - RULE-SET,reject_non_ip,REJECT
  - RULE-SET,reject_domainset,REJECT
  - RULE-SET,reject_non_ip_drop,REJECT-DROP
  - RULE-SET,RejectPCDN,REJECT
  - RULE-SET,cdn_domainset,手动切换
  - RULE-SET,cdn_non_ip,手动切换
  - RULE-SET,Netflix,Netflix
  - RULE-SET,stream_non_ip,美国节点
  - RULE-SET,Telegram,Telegram
  - RULE-SET,apple_cdn,DIRECT
  - RULE-SET,download_domainset,手动切换
  - RULE-SET,download_non_ip,手动切换
  - RULE-SET,microsoft_cdn_non_ip,DIRECT
  - RULE-SET,apple_cn_non_ip,DIRECT  
  - RULE-SET,apple_services,App Store
  - RULE-SET,microsoft_non_ip,Ⓜ️ 微软服务
  - RULE-SET,ai_non_ip,🤖 AIGC
  - RULE-SET,global_non_ip,手动切换
  # 必须规则
  - RULE-SET,domestic_non_ip,DIRECT
  - RULE-SET,direct_non_ip,DIRECT
  - RULE-SET,lan_non_ip,DIRECT

  ### IP 类规则
  # 直连和广告拦截
  - RULE-SET,reject_ip,REJECT
  - RULE-SET,stream_ip,美国节点
  # 必须规则
  - RULE-SET,lan_ip,DIRECT
  - RULE-SET,domestic_ip,DIRECT
  - RULE-SET,china_ip,DIRECT
  - MATCH,漏网之鱼

url-rewrite:
    - ^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302
    - ^https?:\/\/(ditu|maps).google\.cn https://maps.google.com 302
